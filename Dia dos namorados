<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Eu te amo</title>
  <style>
    body {
      margin: 0;
      overflow: hidden;
      background: black;
    }
    canvas {
      display: block;
    }
  </style>
</head>
<body>
  <canvas id="matrix"></canvas>
  <script>
    const canvas = document.getElementById("matrix");
    const ctx = canvas.getContext("2d");

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const phrase = "Eu te amo";
    const fontSize = 18;
    const columns = Math.floor(canvas.width / fontSize);
    const drops = Array(columns).fill(1);

    let frameCount = 0;
    const matrixSpeed = 2;

    function drawMatrix() {
      frameCount++;
      if (frameCount % matrixSpeed !== 0) return;

      ctx.fillStyle = "rgba(0, 0, 0, 0.1)";
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      // Matrix chuva de "Eu te amo"
      ctx.fillStyle = "#ff0080";
      ctx.font = fontSize + "px Arial";
      for (let i = 0; i < drops.length; i++) {
        ctx.fillText(phrase, i * fontSize, drops[i] * fontSize);
        if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
          drops[i] = 0;
        }
        drops[i]++;
      }

      // Texto central
      ctx.font = "60px Dancing Script";
      ctx.fillStyle = "#ffffff";
      ctx.textAlign = "center";
      ctx.fillText("Feliz Dia dos Namorados", canvas.width / 2, canvas.height / 2 - 20);

      ctx.font = "bold 158px Satisfy";
      ctx.fillStyle = "#ff4fa7";
      ctx.fillText("Eu te amo!", canvas.width / 2, canvas.height / 2 + 105);

      updateFireworks();
    }

    // Fireworks
    const fireworks = [];

    function createFirework(x, y) {
      const particles = [];
      const count = 30;
      for (let i = 0; i < count; i++) {
        const angle = (Math.PI * 2 * i) / count;
        const speed = Math.random() * 3 + 2;
        particles.push({
          x: x,
          y: y,
          dx: Math.cos(angle) * speed,
          dy: Math.sin(angle) * speed,
          alpha: 1,
        });
      }
      fireworks.push(particles);
    }

    function updateFireworks() {
      for (let i = fireworks.length - 1; i >= 0; i--) {
        const particles = fireworks[i];
        for (let j = 0; j < particles.length; j++) {
          const p = particles[j];
          p.x += p.dx;
          p.y += p.dy;
          p.alpha -= 0.02;
          ctx.fillStyle = `rgba(255, 0, 128, ${p.alpha})`;
          ctx.beginPath();
          ctx.arc(p.x, p.y, 2, 0, Math.PI * 2);
          ctx.fill();
        }

        if (particles[0].alpha <= 0) {
          fireworks.splice(i, 1);
        }
      }
    }

    canvas.addEventListener("click", (e) => {
      createFirework(e.clientX, e.clientY);
    });

    setInterval(drawMatrix, 33);

    window.addEventListener("resize", () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
    });
  </script>
</body>
</html>
